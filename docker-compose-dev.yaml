services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped
  backend:
    tty: true
    build:
      context: ./backend
      dockerfile: Dockerfile-dev
    depends_on:
      - bookamore-db
    expose:
      - "8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://bookamore-db:5432/bookamore-db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    volumes:
      - ./backend:/app
      - ~/.m2:/root/.m2
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  bookamore-db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bookamore-db
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookamore-db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  frontend:
    tty: true
    build:
      context: ./frontend
      dockerfile: Dockerfile-dev
    expose:
      - "3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/usr/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  app-network:
    driver: bridge
